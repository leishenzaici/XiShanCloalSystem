<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xs.coal.mapper.RoleMapper" >
    <resultMap id="BaseResultMap" type="com.xs.coal.pojo.Role" >
    <id column="roleId" property="roleid" jdbcType="VARCHAR" />
    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
    <result column="roleStatus" property="rolestatus" jdbcType="BIT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="departmentId" property="departmentid" jdbcType="VARCHAR" />
    <collection property="permissions" select="com.xs.coal.mapper.PermissionMapper.getPermissionByRole" 
    javaType="list" column="roleId" ofType="com.xs.coal.pojo.Permission"></collection>
    </resultMap>
    
    <!--  -->
    <resultMap id="RolewithDepNameAndPermission" type="com.xs.coal.pojo.Role" >
    <id column="roleId" property="roleid" jdbcType="VARCHAR" />
    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
    <result column="roleStatus" property="rolestatus" jdbcType="BIT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="departmentId" property="departmentid" jdbcType="VARCHAR" />
	<association property="departmentname" column="departmentId" javaType="String" 
    			select="com.xs.coal.mapper.UserMapper.selectDepartNameByDepartId"></association>
    <collection property="permissions" select="com.xs.coal.mapper.PermissionMapper.getPermissionByRole" 
    javaType="list" column="roleId" ofType="com.xs.coal.pojo.Permission"></collection>
    </resultMap>
  <sql id="roleinfo" >
    roleId, roleName, roleStatus, description, remark, departmentId
  </sql>
  
  <sql id="pageinfo">
  	<if test="rowBegin != null and currentCount != null">LIMIT #{rowBegin},#{currentCount}</if>
  </sql>
  
  <!-- 根据用户编号获取该用户角色信息 -->
  <select id="getRoleByUserId" parameterType="String" resultMap="BaseResultMap">
  	select role.*
	from role LEFT JOIN userrole USING(roleId) LEFT JOIN user USING(userid) 
	where userid=#{userid} 
  </select>
  
  <!-- 根据角色编号查询该角色下的所有用户 -->
  <select id="getUserByRoleId" parameterType="map" resultType="com.xs.coal.pojo.User">
  	SELECT * from user LEFT JOIN userrole USING(userid)
	where roleId=#{roleid}
	<include refid="pageinfo"></include>
  </select>
	
  <!-- 根据用户编号查询该用户不扮演的角色 -->
  <select id="getLeftRoleByUserId" parameterType="String" resultType="com.xs.coal.pojo.Role">
  		SELECT * FROM role WHERE roleId NOT IN(SELECT roleId FROM userrole 
  		WHERE userid=#{userid})
  </select>

  <!-- 根据roleid查询角色信息 包括权限信息 -->
  <select id="getRoleByRoleId" parameterType="String" resultMap="BaseResultMap">
  	select * from role where roleId= #{roleid}
  </select>
  
  <!-- 查询所有启用的角色-->
  <select id="getIsUseRoleByRoleId" parameterType="String" resultType="com.xs.coal.pojo.Role">
  	select * from role where roleStatus='1'
  	<if test="_parameter!=null and _parameter!=''">
  		and departmentId=#{departmentid}
  	</if>
   </select>
  
	<!-- 查询本部的所有的角色信息 -->
	<select id="getAllRoleByRoleId" parameterType="String" resultMap="BaseResultMap">
		select * from role
		<if test="_parameter!=null and _parameter!=''">
	  		and departmentId=#{departmentid}
	  	</if>
	</select>
	  
	<!-- 查询本部门的所有角色信息 -->
	<select id="getRoleByDepartId" parameterType="map" resultMap="BaseResultMap">
	  	SELECT * from role where departmentId =#{departmentid}
	  	order by time desc
	  	 <include refid="pageinfo"></include>
	  </select>
	  
	  <!-- 为角色分配权限 -->
	  <insert id="addPermissionForRole" >
	  	insert into rolepermission (roleId,permissionId) values
	  		<foreach collection="permissionids" item="item"  separator=",">
	  			(#{roleid},#{item})
	  		</foreach>
	  </insert>
  
  
	 <!-- 插入角色信息 -->
	  <insert id="addRole" parameterType="list">   
  	   insert into role(roleId,roleName,roleStatus,description,departmentId,time)
	    values
	    <foreach collection="list" item="role" separator=",">
		    <trim prefix="(" suffix=")" suffixOverrides="," >
		      #{role.roleid},
		      #{role.rolename}, 
		      #{role.rolestatus}, 
		      #{role.description},
		      #{role.departmentid},
		      #{role.datetime}
		    </trim>
	    </foreach>
  </insert>
  
  <!-- 修改角色信息 -->
  <update id="updateRoleInfo" parameterType="com.xs.coal.pojo.Role">
  	  update role
    <set>
      <if test="rolename != null and rolename!=''" >roleName = #{rolename},</if>
      <if test="rolestatus != null and rolename!=''" >roleStatus = #{roleStatus},</if>
      <if test="description != null" >description = #{description}, </if>
      <if test="remark != null" >remark = #{remark},</if>
    </set>
    	where roleId = #{roleid,jdbcType=VARCHAR}
  </update>
  
  <!-- 删除角色信息 -->
  <delete id="deleteRoleInfo" parameterType="list" >
    delete from role where  roleId in (
	<foreach collection="list" item="item" separator=",">
		#{item}
	</foreach>)
  </delete>
  
  <!-- 删除角色的权限(收回分配给角色的权限) -->
  <delete id="deleteRolePermissionByRoleid" parameterType="list">
  	delete from rolepermission where roleId in (
  		<foreach collection="list" item="roleid" separator=",">
  			#{roleid}
  		</foreach>
  	)
  </delete>
  
  <select id="getRoleCount" parameterType="String" resultType="int">
  	select count(roleid) from role where departmentId=#{departmentid}
  </select>
  
   <!-- 根据部门id获取部门名字 -->
  <select id="getDepartNameByDepartId" parameterType="string" resultType="string">
  	select plantName from plant where plantID=#{departmentid}
  </select>
  
  <!-- 根据部门编号获取该部门及其所属部门的角色 -->
  <select id="getRoleNameAndIdByDepartid" parameterType="string" resultType="com.xs.coal.pojo.Role">
  	select roleId,roleName from role where departmentId like '${_parameter}%'
  	<!-- select roleId,roleName from role where departmentId like concat(#{departmentid},'%') -->
  </select>
  
	<!-- 组合查询角色 -->
	<select id="getRoleByCondition"  resultMap="RolewithDepNameAndPermission" >
		SELECT  * from role
		<where>
			departmentid like concat(#{condition.departmentid},'%')
			<if test="condition !=null">
				<if test="condition.rolename !=null and condition.rolename !=''">and rolename like '%${condition.rolename}%'</if>
				<if test="condition.rolestatus !=null and condition.rolestatus !=''">and rolestatus=#{condition.rolestatus}</if>
			</if>
		</where>
		order by time desc
		<include refid="pageinfo"></include>
	</select>
	
		<!-- 组合查询角色 -->
	<select id="getRoleCountByCondition" parameterType="map" resultType="int" >
		SELECT  count(roleid) from role
		<where>
			departmentid like concat(#{departmentid},'%')

				<if test="rolename !=null and rolename !=''">and rolename like '%${rolename}%'</if>
				<if test="rolestatus !=null and rolestatus !=''">and rolestatus=#{rolestatus}</if>
		</where>
		
	</select>
	
	<!-- 关闭/开启角色 -->
	<update id="updateRoleStatus" >
		update role set rolestatus=#{rolestatus} where roleid=#{roleid}
	</update>
	
	<!-- 添加角色信息 -->
	<insert id="addRoleinfo" parameterType="com.xs.coal.pojo.Role">
		insert into role 
	    <trim prefix="(" suffix=")" suffixOverrides="," >
	      <if test="roleid != null and roleid!=''" >roleId,</if>
	      <if test="rolename != null and rolename!=null" >roleName,</if>
	      <if test="rolestatus != null and rolestatus!=''" > roleStatus, </if>
	      <if test="description != null and description!=''" >description,</if>
	      <if test="departmentid!= null and departmentid!=''">departmentId,</if>
	      <if test="remark != null and remark!=''" > remark, </if>
	      <if test="datetime != null and datetime !=''" > time </if>
	    </trim>
	    values
		    <trim prefix="(" suffix=")" suffixOverrides="," >
		      <if test="roleid != null and roleid!=''" >#{roleid},</if>
		      <if test="rolename != null and rolename!=null" > #{rolename}, </if>
		      <if test="rolestatus != null and rolestatus!=''" > #{rolestatus}, </if>
		      <if test="description != null and description!=''" > #{description},</if>
		      <if test="departmentid!= null and departmentid!=''">#{departmentid},</if>
		      <if test="remark != null and remark!=''"  > #{remark}, </if>
		      <if test="datetime != null and datetime !=''"  > #{datetime} </if>
		    </trim>
	</insert>
	
	<select id="getPermissionIDbyRole" parameterType="string" resultType="string">
		select permission.permissionid from rolepermission left join permission using(permissionid) where roleid=#{_parameter} and name is not null
	</select>
	
	<!-- 删除角色时，删除所有用户下的该角色 -->
	<delete id="deleteRoleFromUserByRoleid" parameterType="list" >
		delete from userrole where
			<foreach collection="list" item="roleid" separator=",">
				roleid=#{roleid}
			</foreach>
	</delete>
	
</mapper>